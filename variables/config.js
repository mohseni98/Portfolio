const siteConfig = {
  languages: ["fa", "en"],
  // languages: ["fa"],

  defaultLng: "en",
  dontShowUrlForDefaultLng: false,
  forceUrl: false,

  showCart: true,
  showProfile: true,
  showLanguage: true,
  showDeliveryCalcText: false,

  domainName: "giyoomeh.com",
  rootDomain: "https://giyoomeh.yonnect.ir/giyoomeh/",
  domain: "https://giyoomeh.yonnect.ir/giyoomeh/",
  assetsDomain: "https://giyoomehcdn.yonnect.ir/",
  socketDomain: "https://www.giyoomeh.yonnect.ir/",

  // domainName: '3dot.com',
  // rootDomain: 'https://3dot.yonnect.ir',
  // domain: 'https://3dot.yonnect.ir/3dot/',
  // assetsDomain: 'https://3dotcdn.yonnect.ir/assets/',
  // socketDomain: "https://www.3dot.yonnect.ir/",

  // rootDomain: 'http://192.168.90.20/',
  // domain: 'http://192.168.90.20/iot/',
  // assetsDomain: 'http://192.168.90.20/assets/',
  // socketDomain: "http://192.168.90.20/",

  // rootDomain: 'http://localhost/',
  // domain: 'http://localhost/iot/',
  // assetsDomain: 'http://localhost/assets/',
  // socketDomain: "http://localhost/",

  name: "Giyoomeh",
  siteName: "giyoomeh",
  phone: "0218794",
  instagram: "https://instagram.com/anp-co",
  email: "ingo@giyoomeh.com",
  facebook: "",
};

const siteTheme = {
  logo: "/images/i-logo.png",
  logo_s: "/images/i-logo.png",
  // invertLogo: true,

  themeColors: { headerBack: "#f2f7f8", headerFont: "#000000" },
  // themeColors: { headerBack: '#46196f', headerFont: '#ffffff' },
  // themeColors: { headerBack: '#000000', headerFont: '#ffffff' },

  backgroundColors: {
    normal: "#e2e8ea",
    plus: "#ee5050",
    luxury: "#101010",
    custom: "#d3b564",
  },
  colors: {
    normal: "#202020",
    plus: "#fff",
    luxury: "#fff",
    custom: "#101010",
  },
};

const languagesInfo = {
  en: {
    shortName: "en",
    direction: "ltr",
    name: "English",
    icon: "/assets/flags/US.svg",
  },
  fa: {
    shortName: "fa",
    direction: "rtl",
    name: "فارسی",
    icon: "/assets/flags/IR.svg",
  },

};

let apisList = {
  // //! LOGIN
  // checkUserExist: { route: 'users/check', server: 'yc', hashMethod: '', auth: null, params: [], flexibleParams: true },
  // userSendVerifyCode: { route: 'users/signup/verifyCode', server: 'yc', hashMethod: '', auth: null, params: [], flexibleParams: true },
  // userPostInfo: { route: 'users/signup/postInfo', server: 'yc', hashMethod: '', auth: null, params: [], flexibleParams: true },
  // login: { route: 'users/authenticate', server: 'yc', hashMethod: '', auth: null, params: [], flexibleParams: true },

  // USER
  checkUserExist: {
    route: "users/check",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  login: {
    route: "users/authenticate",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  userSendVerifyCode: {
    route: "users/signup/verifyCode",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  //Todo create user
  userPostInfo: {
    route: "users/signup/postInfo",
    server: "yc",
    hashMethod: "",
    auth: "token",
    flexibleParams: true,
  },
  userForgetPassword: {
    route: "users/forgotPassword",
    server: "yc",
    hashMethod: "",
    auth: "token",
    flexibleParams: true,
  },
  userForgetPasswordVerifyCode: {
    route: "users/forgotPassword/verifyCode",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  userForgetPasswordPostPassword: {
    route: "users/forgotPassword/postPassword",
    server: "yc",
    hashMethod: "",
    auth: "token",
    flexibleParams: true,
  },
  userUpdate: {
    route: "users/add",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  userGetAll: {
    route: "users/getAll",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },
  userRemove: {
    route: "users/remove",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },
  getUserInfo: {
    route: "users/getInfo",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },
  userAuthVerifyCode: {
    route: "users/signin/verifyCode",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  userUpdateInfo: {
    route: "users/updateInfo",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  userRegisterDevice: {
    route: "users/registerDevice",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  userUnregisterDevice: {
    route: "users/unregisterDevice",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  addBusiness: {
    route: "users/addBusiness",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getShops: {
    route: "users/getShops",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getMalls: {
    route: "users/getMalls",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getBrands: {
    route: "users/getBrands",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getMallShops: {
    route: "users/getMallShops",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getBrandShops: {
    route: "users/getBrandShops",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getOneBusiness: {
    route: "users/getOneBusiness",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },

  //! follow business
  followBusiness: {
    route: "follow/followBusiness",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  unfollowBusiness: {
    route: "follow/unfollowBusiness",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getFollowers: {
    route: "follow/getFollowers",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getFollowing: {
    route: "follow/getFollowing",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },

  // addBusiness: { route: 'users/addBusiness', server: 'yc', hashMethod: '', auth: null, params: [], flexibleParams: true },

  // USER
  // postUserIndicator: { route: 'users/signup/postUserIndicator', server: 'yc', hashMethod: '', params: [{ key: "userIndicator", type: 'string', required: true }, { key: "indicatorType", type: 'string', required: true }] },
  // signupActicationCode: { route: 'users/signup/postActicationCode', server: 'yc', hashMethod: '', params: [{ key: "userIndicator", type: 'string', required: true }, { key: "code", type: 'number', required: true }, { key: "indicatorType", type: 'string', required: true }] },
  // signinActicationCode: { route: 'users/signin/postActicationCode', server: 'yc', hashMethod: '', params: [{ key: "userIndicator", type: 'string', required: true }, { key: "code", type: 'number', required: true }, { key: "indicatorType", type: 'string', required: true }] },
  // postUserInfo: { route: 'users/signup/postUserInfo', server: 'yc', hashMethod: '', flexibleParams: true, params: [{ key: "userIndicator", type: 'string', required: true }, { key: "code", type: 'number', required: true }, { key: "indicatorType", type: 'string', required: true }] },
  // postForgotPassword: { route: 'users/signup/postForgotPassword', server: 'yc', hashMethod: '', params: [{ key: "userIndicator", type: 'string', required: true }, { key: "indicatorType", type: 'string', required: true }] },
  // postPassword: { route: 'users/signup/postPassword', server: 'yc', hashMethod: '', params: [{ key: "userIndicator", type: 'string', required: true }, { key: "code", type: 'number', required: true }, { key: "password", type: 'string', required: true }, { key: "indicatorType", type: 'string', required: true }] },
  // postNewPassword: { route: 'users/signup/postNewPassword', server: 'yc', hashMethod: '', params: [{ key: "userIndicator", type: 'string', required: true }, { key: "code", type: 'number', required: true }, { key: "password", type: 'string', required: true }, { key: "indicatorType", type: 'string', required: true }] },
  // getUserInfo: { route: 'users/getInfo', server: 'yc', hashMethod: '', auth: 'token', params: [] },
  // getOneUser: { route: 'users/getOneUser', server: 'yc', hashMethod: '', auth: 'token', params: [{ key: "id", type: 'string', required: true }] },
  // updateUserInfo: { route: 'users/updateUserInfo', server: 'yc', hashMethod: '', flexibleParams: true, auth: 'token', params: [{ key: "name", type: 'string', required: true }, { key: "name", type: 'family', required: true }] },
  // updateUserPassword: { route: 'users/updateUserPassword', server: 'yc', hashMethod: '', flexibleParams: true, auth: 'token', params: [{ key: "currentPassword", type: 'string', required: true }, { key: "newPassword", type: 'string', required: true }] },
  // getInbox: { route: 'users/getInbox', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // seenInbox: { route: 'users/seenInbox', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getUsers: { route: 'users/getUsers', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // removeUser: { route: 'users/removeUser', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // updateUser: { route: 'users/updateUser', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getAdmins: { route: 'users/getAdmins', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // updateAdmin: { route: 'users/updateAdmin', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // removeAdmin: { route: 'users/removeAdmin', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getPayments: { route: 'payments/getPayments', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // updatePayment: { route: 'payments/updatePayment', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // removePayment: { route: 'payments/removePayment', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // ignoreData: { route: 'payments/ignoreData', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // increaseBalance: { route: 'payments/increaseBalance', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // usersExport: { route: 'users/usersExport', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  //Values
  // getValuesWithData: { route: 'values/getValuesWithData', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // postValue: { route: 'values/postValue', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // removeValue: { route: 'values/removeValue', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getOneValue: { route: 'values/getOneValue', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getMyPayments: { route: 'payments/getMyPayments', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  //// Content
  getContents: {
    route: "content/getContents",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },
  getOneContent: {
    route: "content/getOneContent",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },
  // postContent: { route: 'content/postContent', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // removeContent: { route: 'content/removeContent', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getRandomContents: { route: 'content/getRandomContents', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  //blogs
  getBlogs: {
    route: "blogs/getBlogs",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },
  postBlog: {
    route: "blogs/postBlog",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },
  removeBlog: {
    route: "blogs/removeBlog",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },
  getOneBlog: {
    route: "blogs/getOneBlog",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },
  getRecommendedBlogs: {
    route: "blogs/getRecommendedBlogs",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },
  searchBlogs: {
    route: "blogs/searchBlogs",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },
  getSpecialBlogs: {
    route: "blogs/getSpecialBlogs",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },

  // Shop
  // getProducts: { route: 'shop/getProducts', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getOneProduct: { route: 'shop/getOneBlog', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getRecommendedProducts: { route: 'shop/getRecommendedProducts', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // searchProducts: { route: 'shop/searchProduct', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getSpecialProducts: { route: 'shop/getSpecialProducts', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  getMyProducts: {
    route: "products/getMyProducts",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },
  // getProducts: { route: 'shop/getProducts', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getProduct: { route: 'shop/getProduct', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // postProduct: { route: 'shop/postProduct', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // removeProduct: { route: 'shop/removeProduct', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  // getRecommendedProducts: { route: 'shop/getRecommendedProducts', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getDocsSummary: { route: 'documentation/getDocsSummary', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // searchDocs: { route: 'documentation/searchDocs', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getOneDoc: { route: 'documentation/getOneDoc', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  // postPartner: { route: 'shop/postPartner', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getMyAddresses: { route: 'shop/getMyAddresses', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // postAddress: { route: 'shop/postAddress', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // postOrder: { route: 'shop/postOrder', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getOneOrder: { route: 'shop/getOneOrder', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getMyOrders: { route: 'shop/getMyOrders', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getPaymentLink: { route: 'shop/getPaymentLink', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // verifyPayment: { route: 'shop/verifyPayment', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  // removeAddress: { route: 'shop/removeAddress', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  // Academy
  // getCourses: { route: 'academy/getCourses', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getSpecialCourses: { route: 'academy/getSpecialCourses', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // searchCourses: { route: 'academy/searchCourses', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getOneCourse: { route: 'academy/getOneCourse', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  // getLessons: { route: 'academy/getLessons', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getOneLesson: { route: 'academy/getOneLesson', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  // Forums

  // getUsersQuestions: { route: 'forums/getUsersQuestions', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getOneQuestion: { route: 'forums/getOneQuestion', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // postQuestion: { route: 'forums/postQuestion', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // removeQuestion: { route: 'forums/removeQuestion', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  // searchQuestions: { route: 'forums/searchQuestions', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getSpecialQuestions: { route: 'forums/getSpecialQuestions', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  // postAnswer: { route: 'forums/postAnswer', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // removeAnswer: { route: 'forums/removeAnswer', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // postVote: { route: 'forums/postVote', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  // Ticketing
  // getMyTickets: { route: 'ticketing/getMyTickets', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getOneTicket: { route: 'ticketing/getOneTicket', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // postTicket: { route: 'ticketing/postTicket', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // postTicketReply: { route: 'ticketing/postTicketReply', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getTickets: { route: 'ticketing/getTickets', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  // getAllCategories: { route: 'categories/getAllCategory', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },
  // getMessengers: { route: 'messenger/getMessengers', server: 'yc', hashMethod: '', params: [], auth: 'vtoken', flexibleParams: true },
  // getMessengerMessages: { route: 'messenger/getMessengerMessages', server: 'yc', hashMethod: '', params: [], auth: 'token', flexibleParams: true },

  // Advertisment
  // getAdvertisements: { route: 'advertisements/getAllAdvertisements', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // postAdvertisement: { route: 'advertisements/addAdvertisements', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // removeAdvertisement: { route: 'advertisements/removeAdvertisements', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // getWishlists: { route: 'advertisements/getAllWishlists', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // addToWishlist: { route: 'advertisements/addToWishlist', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // removeFromWishlist: { route: 'advertisements/RemoveFromWishlist', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },

  // baners
  getBanners: {
    route: "banners/getAll",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  postBanner: {
    route: "banners/postBanner",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  removeBanner: {
    route: "banners/removeBanner",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },

  // // products
  // addProduct: { route: 'products/addProduct', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // getProducts: { route: 'products/getAllProducts', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // submitProduct: { route: 'products/submitProduct', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // removeProduct: { route: 'products/removeProduct', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // getOneProduct: { route: 'products/getOneProduct', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },

  // // category
  // categoryAdd: { route: 'categories/addCategory', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // getAllCategory: { route: 'categories/getAllCategory', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // getCities: { route: 'config/getAllCities', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },

  //! do not need this in front
  getFilteredSpecifications: {
    route: "categories/getFilteredSpecifications",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  //! do not need this in front
  removeCategory: {
    route: "categories/removeCategory",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },

  // category
  categoryAdd: {
    route: "categories/addCategory",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getAllCategory: {
    route: "categories/getAllCategory",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  // do not need this in front
  removeCategory: {
    route: "categories/removeCategory",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getOneCategory: {
    route: "categories/getOneCategory",
    server: "yc",
    hashMethod: "",
    auth: null,
    params: [],
    flexibleParams: true,
  },
  getMainCategories: {
    route: "categories/getMainCategories",
    server: "yc",
    hashMethod: "",
    auth: null,
    params: [],
    flexibleParams: true,
  },
  addSpecifications: {
    route: "categories/addSpecifications",
    server: "yc",
    hashMethod: "",
    auth: null,
    params: [],
    flexibleParams: true,
  },
  checkSync: {
    route: "categories/checkSync",
    server: "yc",
    hashMethod: "",
    auth: null,
    params: [],
    flexibleParams: true,
  },

  // Specification
  // do not need this in front
  getFilteredSpecifications: {
    route: "categories/getFilteredSpecifications",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  moveSpecifications: {
    route: "categories/RemoveSpecifications",
    server: "yc",
    hashMethod: "",
    auth: null,
    params: [],
    flexibleParams: true,
  },
  getAllSpecifications: {
    route: "categories/getAllSpecifications",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  addSpecifications: {
    route: "categories/addSpecifications",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  RemoveSpecifications: {
    route: "categories/RemoveSpecifications",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },

  // cities
  addCities: {
    route: "config/addCities",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getAllCities: {
    route: "config/getAllCities",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  RemoveCities: {
    route: "config/RemoveCities",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },

  // Countries
  addCountries: {
    route: "config/addCountries",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getAllCountries: {
    route: "config/getAllCountries",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  removeCountries: {
    route: "config/config/removeCountries",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },

  // permissions
  addPermission: {
    route: "permissions/addPermission",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getPermissions: {
    route: "permissions/getPermissions",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  removePermission: {
    route: "permissions/removePermission",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getOnePermissions: {
    route: "permissions/getOnePermissions",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },

  // products
  addProduct: {
    route: "products/addProduct",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getProducts: {
    route: "products/getAllProducts",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  submitProduct: {
    route: "products/submitProduct",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  removeProduct: {
    route: "products/removeProduct",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  getOneProduct: {
    route: "products/getOneProduct",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },

  // wishlists
  getWishlists: {
    route: "products/getAllWishlists",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  postWishlist: {
    route: "products/addToWishlist",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  removeWishlist: {
    route: "products/RemoveFromWishlist",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  // colors
  getColors: {
    route: "products/getAllColors",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  postColor: {
    route: "products/addColor",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  removeColor: {
    route: "products/removeColor",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },

  // sizes
  getSizes: {
    route: "products/getAllSizes",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  postSize: {
    route: "products/addSize",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  removeSize: {
    route: "products/removeSize",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },

  // // baners
  // getBaners: { route: 'baners/getAll', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // postBaner: { route: 'baners/postBaner', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // removeBaner: { route: 'baners/removeBaner', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },

  // messages
  getMessages: {
    route: "messages/getMessages",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  postMessage: {
    route: "messages/postMessage",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },
  removeMessage: {
    route: "messages/removeMessage",
    server: "yc",
    hashMethod: "",
    auth: "token",
    params: [],
    flexibleParams: true,
  },

  //3dot plus
  getOneContent: {
    route: "content/getOneContent",
    server: "yc",
    hashMethod: "",
    params: [],
    auth: "token",
    flexibleParams: true,
  },

  // // Blog
  // getBlogs: { route: 'blogs/getBlogs', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // postBlog: { route: 'blogs/postBlog', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
  // removeBlogs: { route: 'blogs/removeBlog', server: 'yc', hashMethod: '', auth: 'token', params: [], flexibleParams: true },
};

export { siteConfig, siteTheme, languagesInfo, apisList };
